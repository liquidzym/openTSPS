package com.lab.connection  {		import flash.net.Socket;	import flash.events.DataEvent;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.events.SecurityErrorEvent;	import flash.utils.ByteArray;	import flash.utils.Endian;		import org.tuio.osc.OSCEvent;		/**	 * A Class to establish a socket connection and receive OSC data from openTSPS	 *	 * @author Jeff Hoefs. Some code snippets referenced from org.tuio.tcp.OSCSocket.as	 * (http://code.google.com/p/tuio-as3/)	 */ 		public class OSCSocket extends Socket {				private var Buffer:ByteArray = new ByteArray();		private var PartialRecord:Boolean = false;		public function OSCSocket() {			super();					addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);			addEventListener(ProgressEvent.SOCKET_DATA, socketDataHandler);		}		        private function securityErrorHandler(event:SecurityErrorEvent):void {        	trace("securityErrorHandler: " + event);        }				// implementation of socketDataHandler copied from tuio-as3 OSCSocket.as		// http://code.google.com/p/tuio-as3/		// removed: data.endian = Endian.LITTLE_ENDIAN;	    private function socketDataHandler(event:ProgressEvent):void {			    		var data:ByteArray = new ByteArray();    		if(PartialRecord){    			Buffer.readBytes(data,0,Buffer.length);    			PartialRecord = false;    		}        	super.readBytes(data,data.length,super.bytesAvailable);   			    		// While we have data to read			while(data.position < data.length){								var Length:int = data.readInt() + 4;	    			    		data.position -= 4;								// If we have enough data to form a full packet.				if(Length <= (data.length - data.position)){		    		var packet:ByteArray = new ByteArray();		    		data.readBytes(packet,0,Length);		    		packet.position = 0;		    		this.dispatchEvent(new OSCEvent(packet));		   		} else {					// Read the partial packet					Buffer = new ByteArray();					data.readBytes(Buffer,0,data.length - data.position);					PartialRecord = true;		   		}	    					}	    }					}}