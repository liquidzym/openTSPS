package app {		import com.lab.TSPSPerson;	import com.lab.events.TSPSEvent;	import flash.display.Sprite;	import flash.display.Shape;	import flash.text.TextField;		public class CustomPerson extends Sprite {				private var _person:TSPSPerson;			private var _contourShape:Shape;		private var _dead:Boolean;				private var _activeWidth:Number;		private var _activeHeight:Number;				public function get person():TSPSPerson {			return _person;		}				public function set person(value:TSPSPerson):void {			_person = value;		}				public function get dead():Boolean {			return _dead;		}				public function set dead(value:Boolean):void {			_dead = value;		}			public function CustomPerson( person:TSPSPerson, activeWidth:Number=1024, activeHeight:Number=768 ) {			_person = person;			_activeWidth = activeWidth;			_activeHeight = activeHeight;									_dead = false;						_contourShape = new Shape();			addChild(_contourShape);					// listen for the person update event, which is dispatched			// every time TSPS gets new info about a person object			_person.addEventListener( TSPSEvent.PERSON_UPDATED, update );			update();		}			public function setBackground (frame:uint=100):void {			if (frame < bg_mc.totalFrames) bg_mc.gotoAndStop(frame);			else bg_mc.gotoAndStop(Math.floor(bg_mc.totalFrames*Math.random()))		}			// update the x, y, width, height, and info text		private function update( e:TSPSEvent = null ):void {						x = _person.x * _activeWidth;			y = _person.y * _activeHeight;			centerpoint.x = _person.centroid.x * _activeWidth - x;			centerpoint.y = _person.centroid.y * _activeHeight - y;			id_txt.text = String(_person.id);			age_txt.text = String(_person.age);			bg_mc.width = _person.realWidth * _activeWidth;				bg_mc.height = _person.realHeight * _activeHeight;					//move + mask bounding boxes			boundingL_mc.mask_mc.height = bg_mc.height;			boundingT_mc.mask_mc.width 	= bg_mc.width;			boundingR_mc.x = bg_mc.width;			boundingR_mc.mask_mc.height = bg_mc.height;			boundingB_mc.y = bg_mc.height;			boundingB_mc.mask_mc.width = bg_mc.width;					//contour			if (_person.contours.length > 0) {					_contourShape.graphics.clear();				_contourShape.graphics.beginFill(0xffffff,0);				_contourShape.graphics.lineStyle(1,0xffffff,.5);				_contourShape.graphics.moveTo(_person.contours[0].x * _activeWidth -x, _person.contours[0].y * _activeHeight -y);				for (var i:uint = 1; i<_person.contours.length; i++){					_contourShape.graphics.lineTo(_person.contours[i].x * _activeWidth -x, _person.contours[i].y * _activeHeight -y);				}				_contourShape.graphics.endFill();			}						_dead = _person.dead;		}	}}