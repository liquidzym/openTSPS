package com.lab.connection  {		import flash.events.EventDispatcher;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.geom.Point;	import flash.utils.setTimeout;		import com.lab.events.SocketMessageEvent;	import com.lab.connection.TCPSocket;	import com.lab.connection.ITSPSConnection;	import com.lab.events.TSPSDataEvent;		/**	 * A Class to handle incoming TCP data sent from openTSPS.	 *	 * @author Jeff Hoefs	 */ 	public class TCPConnection extends EventDispatcher implements ITSPSConnection {		private var socket:TCPSocket;				private var _autoRestart:Boolean;		public function TCPConnection(autoRestart:Boolean = true) {			_autoRestart = autoRestart;						createSocket();		}				private function createSocket():void {						socket = new TCPSocket();			socket.addEventListener(Event.CLOSE, closeHandler);			socket.addEventListener(Event.CONNECT, connectHandler);			socket.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);			socket.addEventListener(SocketMessageEvent.MESSAGE_RECEIVED, messageHandler);		}				/**		 * Establish a connection with openTSPS.		 *		 * @param	host the IP address of the host computer		 * @param	port the port		 */		public function connect(host:String = "127.0.0.1", port:int = 3335 ):void {				socket.connect(host, port);					}				/**		 * Connection status		 *		 * @return The status of the connection with openTSPS		 */				public function get connected():Boolean {			if (socket != null) return socket.connected;			else return false;		}						// pass events up to calling class		private function closeHandler(evt:Event):void {			dispatchEvent(evt);        }		     	private function connectHandler(evt:Event):void {	     		dispatchEvent(evt);        } 				private function ioErrorHandler(evt:IOErrorEvent):void {			trace("ioErrorHandler: " + evt);			if (_autoRestart) {				// To do: replace this with timer				if (this.connected == false) setTimeout(this.connect, 1500);			}		}				// dispatch each message object (definition of a single person from openTSPS)		private function messageHandler ( evt:SocketMessageEvent ):void {			var messageArray:Array = evt.data;						for (var i:uint = 0; i<messageArray.length; i++) {				var messageObject:Object = messageArray[i];								dispatchEvent( new TSPSDataEvent( TSPSDataEvent.DATA_READY, messageObject ) );			}					}	}	}